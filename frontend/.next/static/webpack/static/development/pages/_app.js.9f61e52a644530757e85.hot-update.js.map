{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.9f61e52a644530757e85.hot-update.js","sources":["webpack:///./components/TakeMyMoney.js"],"sourcesContent":["import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport Router from \"next/router\";\r\nimport NProgress from \"nprogress\";\r\nimport PropTypes from \"prop-types\";\r\nimport gql from \"graphql-tag\";\r\nimport calcTotalPrice from \"../lib/calcTotalPrice\";\r\nimport Error from \"./ErrorMessage\";\r\nimport User, { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n  mutation createOrder($token: String!) {\r\n    createOrder(token: $token) {\r\n      id\r\n      charge\r\n      total\r\n      items {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction totalItems(cart) {\r\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\r\n}\r\n\r\nclass TakeMyMoney extends React.Component {\r\n  onToken = async (res, createOrder) => {\r\n    NProgress.start();\r\n    console.log(\"On Token Called\");\r\n    console.log(res.id);\r\n    // manually call the mutation once we have the stripe token\r\n    const order = await createOrder({\r\n      variables: {\r\n        token: res.id\r\n      }\r\n    }).catch(err => {\r\n      alert(err.message);\r\n    });\r\n    Router.push({\r\n      pathname: `/order`,\r\n      cartOpen: false,\r\n      query: { id: order.data.createOrder.id }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <User>\r\n        {({ data: { me } }) => (\r\n          <Mutation\r\n            mutation={CREATE_ORDER_MUTATION}\r\n            refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n          >\r\n            {createOrder => (\r\n              <StripeCheckout\r\n                amount={calcTotalPrice(me.cart)}\r\n                currency=\"GBP\"\r\n                name=\"Sick Fits\"\r\n                description={`Order of ${totalItems(me.cart)} items`}\r\n                image={\r\n                  me.cart.length && me.cart[0].item && me.cart[0].item.image\r\n                }\r\n                stripeKey=\"pk_test_Dtu5usG8schCgZAgJb7NYpaY\"\r\n                email={me.email}\r\n                token={res => this.onToken(res, createOrder)}\r\n              >\r\n                {this.props.children}\r\n              </StripeCheckout>\r\n            )}\r\n          </Mutation>\r\n        )}\r\n      </User>\r\n    );\r\n  }\r\n}\r\nexport default TakeMyMoney;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAMA;AACA;AADA;AADA;AAKA;AACA;AACA;AAZA;AAKA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAkBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AAyBA;;;;AAhDA;AACA;AAiDA;;;;A","sourceRoot":""}